apply plugin: 'com.android.application'
apply plugin: 'android-apt'


android {
//    compileSdkVersion 23
//    buildToolsVersion "23.0.2"

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.chessen.project.stylestumble"
//        minSdkVersion 21
//        targetSdkVersion 23
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    signingConfigs {
        release {
            def propsFile= rootProject.file('keystore.properties')
            def configName = 'release'

            if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                android.signingConfigs[configName].storeFile = file(props['storeFile'])
                android.signingConfigs[configName].storePassword = props['storePassword']
                android.signingConfigs[configName].keyAlias = props['keyAlias']
                android.signingConfigs[configName].keyPassword = props['keyPassword']
            }

        }
    }
//    buildTypes {
//        release {
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
    buildTypes {

        release{
            signingConfig signingConfigs.release
        }
        debug {
            // Run code coverage reports by default on debug builds.
            // testCoverageEnabled = true
        }
    }

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
//        mock {
//            applicationIdSuffix = ".mock"
//        }
        prod {

        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    sourceSets {
        prod { java.srcDirs = ['src/prod/java', 'src/prod/java/'] }
        prodDebug { java.srcDirs = ['src/prodDebug/java', 'src/prod'] }
    //    mock { java.srcDirs = ['src/mock/java', 'src/mock/java/'] }
        main {
            java.srcDirs = ['src/main/java', 'src/main/java/data/provider', 'src/main/java/productdetail']
        }
    }
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
//    testCompile 'junit:junit:4.12'
//    compile 'com.android.support:appcompat-v7:23.1.1'
//    compile 'com.android.support:design:23.1.1'
//    compile 'com.android.support:support-v4:23.1.1'
//    compile 'com.android.support:recyclerview-v7:23.1.1'
    // App's dependencies, including test
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.google.guava:guava:$rootProject.guavaVersion"
    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.ext.espressoVersion"
    apt 'net.simonvt.schematic:schematic-compiler:0.6.3'

    // compile project(':swipecards')

    // Dependencies for local unit tests
//    testCompile "junit:junit:$rootProject.ext.junitVersion"
//    testCompile "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
//    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
//    testCompile "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
//    testCompile "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"
//
//    // Android Testing Support Library's runner and rules
//    androidTestCompile "com.android.support.test:runner:$rootProject.ext.runnerVersion"
//    androidTestCompile "com.android.support.test:rules:$rootProject.ext.runnerVersion"
//
//    // Espresso UI Testing dependencies.
//    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
//    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
//    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"
    compile 'com.google.code.gson:gson:2.6.1'
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    compile 'com.squareup.okhttp3:okhttp:3.1.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'
    compile 'net.simonvt.schematic:schematic:0.6.3'
    compile 'com.android.support:support-v4:23.2.1'
    compile 'com.android.support:recyclerview-v7:23.2.1'
    compile 'com.android.support:design:23.2.1'
    compile 'com.google.android.gms:play-services-gcm:8.4.0'
    compile 'com.google.android.gms:play-services-analytics:8.4.0'


}


configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
}

configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}
dependencies {
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:appcompat-v7:23.1.1'
}

apply plugin: 'com.google.gms.google-services'